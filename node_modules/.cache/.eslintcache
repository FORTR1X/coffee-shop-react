[{"C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\index.tsx":"1","C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\reportWebVitals.ts":"2","C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\App.tsx":"3","C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\components\\Navbar\\Navbar.tsx":"4","C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\components\\Navbar\\Spoiler\\Spoiler.tsx":"5","C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\components\\Navbar\\NavbarContainer.tsx":"6","C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\store\\Actions\\NavbarAction.ts":"7","C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\store\\redux-store.ts":"8","C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\store\\Reducers\\NavbarReducer.ts":"9","C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\hooks\\useApi.ts":"10","C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\components\\Router\\RouterContainer.ts":"11","C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\components\\Router\\Router.tsx":"12","C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\components\\Sliders\\Slider.tsx":"13","C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\store\\Reducers\\UrlReducer.ts":"14"},{"size":593,"mtime":1660054503018,"results":"15","hashOfConfig":"16"},{"size":440,"mtime":1659370522515,"results":"17","hashOfConfig":"16"},{"size":205,"mtime":1660215681735,"results":"18","hashOfConfig":"16"},{"size":20353,"mtime":1660240359298,"results":"19","hashOfConfig":"16"},{"size":2171,"mtime":1660211460128,"results":"20","hashOfConfig":"16"},{"size":3204,"mtime":1660218925684,"results":"21","hashOfConfig":"16"},{"size":3940,"mtime":1660403625613,"results":"22","hashOfConfig":"16"},{"size":390,"mtime":1660400666040,"results":"23","hashOfConfig":"16"},{"size":7220,"mtime":1660396049996,"results":"24","hashOfConfig":"16"},{"size":1171,"mtime":1660128821916,"results":"25","hashOfConfig":"16"},{"size":2225,"mtime":1660402400894,"results":"26","hashOfConfig":"16"},{"size":1889,"mtime":1660403701803,"results":"27","hashOfConfig":"16"},{"size":1858,"mtime":1660402764684,"results":"28","hashOfConfig":"16"},{"size":7517,"mtime":1660403636692,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"13u38c9",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\index.tsx",[],[],[],"C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\reportWebVitals.ts",[],[],"C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\App.tsx",[],[],"C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\components\\Navbar\\Navbar.tsx",["76","77","78","79","80","81","82","83","84","85","86","87","88"],[],"import React, { useEffect, useState } from \"react\"\r\n\r\nimport s from './styles/Navbar.module.css'\r\nimport './styles/index.css'\r\n\r\nimport cart from './cart.svg'\r\nimport search from './search.svg'\r\n\r\nimport { CSSTransition } from \"react-transition-group\"\r\n\r\nimport { CategoryType, SubcategoryType, ProductType, UserType, CompanyCategoryType } from \"../../interfaces/interfaces\"\r\nimport Spoiler from \"./Spoiler/Spoiler\"\r\nimport { PropsNavbar } from \"./NavbarContainer\"\r\n\r\nconst Navbar: React.FC<PropsNavbar> = (props) => {\r\n\r\n  let uniqueKey = 0;\r\n\r\n  useEffect( () => {\r\n    if (props.productCategories == null && props.companyCategories == null) {\r\n      props.getCompanyCategories()\r\n      props.getProductCategories()\r\n      props.getUser()\r\n    }\r\n  }, [props.productCategories])\r\n\r\n  useEffect( () => {\r\n    if (props.productCategories !== null && subcategoriesByCategoryResult.length == 0) \r\n      handleGetSubcategoriesByCategory()\r\n  }, [props.productCategories])\r\n\r\n  const handleGetSubcategoriesByCategory = async (): Promise<void> => {\r\n    let resultArray: SubcategoryType[][] = []\r\n    if (props.productCategories !== null && props.productCategories.length !== undefined) \r\n      for (let i = 0; i < props.productCategories.length; i++) {\r\n        let res = await props.getProductSubcategories(i+1)\r\n        resultArray.push(res)\r\n      }\r\n\r\n    props.setSubcategoriesByCategory(resultArray)\r\n  }\r\n\r\n  let subcategoriesByCategoryResult: SubcategoryType[][] = []\r\n  let subcategoriesByCategory: SubcategoryType[][] | null = props.productSubcategoriesByCategory;\r\n  const topCategories: Array<CompanyCategoryType> | null = props.companyCategories\r\n  const bottomCategories: Array<CategoryType> | null = props.productCategories //.sort((a, b) => a.title.length > b.title.length ? -1 : 1)\r\n  const cartProductList: Array<ProductType> | null = props.cartProductList\r\n  const user: UserType | null = props.user;\r\n\r\n  let totalCostCart: number = 0;\r\n  let countGoodsInCart: number = 3;\r\n\r\n  const [searchValue, setSearchValue] = useState('')\r\n  const handleSetSearchValue = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchValue(event.target.value)\r\n  }\r\n\r\n  const isSearchOpen = props.isSearchOpen\r\n  const handleOnClickSearch = (state?: boolean): void => {\r\n    handleIsCategoryHovered(false)\r\n    \r\n    if (state !== undefined)\r\n      props.setIsSearchOpen(state)\r\n\r\n    if (state == undefined)  \r\n      props.setIsSearchOpen(!isSearchOpen)\r\n  }\r\n\r\n  const isHamburgerOpen = props.isHamburgerOpen\r\n  const toggleHamburger = (): void => {\r\n    props.setHamburgerOpen(!isHamburgerOpen)\r\n    handleOnClickSearch(false)\r\n  }\r\n\r\n  const isCategoryHovered = props.isCategoryHovered\r\n  const currentSelectedCategory = props.currentSelectedCategory\r\n  const handleIsCategoryHovered = (isState: boolean, currentCategory?: CategoryType): void => {\r\n    props.setIsCategoryHovered(isState)\r\n    props.setIsSearchOpen(false)\r\n    if (currentCategory !== undefined) {\r\n      props.setCurrentSelectedCategory(currentCategory)\r\n    }\r\n  }\r\n\r\n  const deleteFromCart = (productId: number, index: number): void => {\r\n    \r\n  }\r\n\r\n  const isCartOpen = props.isCartOpen\r\n  const handleIsCartOpen = (state?: boolean):void => {\r\n    if (state == undefined)\r\n      props.setIsCartOpen(!isCartOpen)\r\n\r\n    if (state !== undefined)\r\n      props.setIsCartOpen(state)\r\n\r\n      totalCostCart = 0;  \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {(subcategoriesByCategory !== null \r\n        && topCategories != null && bottomCategories !== null && bottomCategories.length !== undefined\r\n        && user !== null && subcategoriesByCategory.length === bottomCategories.length) && \r\n        <nav className={s.header}>\r\n          <div className={s.header__top}>\r\n            <div className={s.header__top_container}>\r\n              <ul className={s.header__top_ul}>\r\n                {topCategories.map((category, index) => \r\n                  <li key={++uniqueKey}>\r\n                    <a onClick={() => handleIsCategoryHovered(false)} className={s.header__top_li} href={category.url} >\r\n                      {category.title}\r\n                    </a>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n              <span onClick={() => handleIsCategoryHovered(false)} className={s.header__number}>{user.phoneNumber}</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* lg */}\r\n          <div className={s.header__bottom}>\r\n            <div className={s.header__bottom_container}>\r\n              <a className={s.header__bottom_logo} href=\"/\"/>\r\n\r\n              <ul className={s.category__ul}>\r\n                {bottomCategories.map(category =>\r\n                  <li\r\n                    className={s.category__li}\r\n                    onClick={ (event) => { event.currentTarget.classList.toggle(`${s.active}`) } }\r\n                  >\r\n                    {/* lg display */}\r\n                    <a \r\n                      key={++uniqueKey * 5}\r\n                      href={category.url}\r\n                      className={s.header__text_animation}\r\n                      onMouseEnter={ () => handleIsCategoryHovered(true, category) }\r\n                      onMouseLeave={ () => handleIsCategoryHovered(false) }\r\n                    >\r\n                      {category.title}\r\n                    </a>\r\n\r\n                    {/* md display */}\r\n                    {subcategoriesByCategory !== null && subcategoriesByCategory.length !== undefined && subcategoriesByCategory.length > 0 && subcategoriesByCategory[category.id - 1].length == 0 && subcategoriesByCategory.length == bottomCategories.length &&\r\n                      <a\r\n                        key={++uniqueKey * 10}\r\n                        href={category.url}\r\n                        className={s.header__text_animation_md}\r\n                      >\r\n                        {category.title}\r\n                      </a>\r\n                    }\r\n                    {subcategoriesByCategory !== null && subcategoriesByCategory.length !== undefined && subcategoriesByCategory.length > 0 && subcategoriesByCategory[category.id - 1].length > 0 && subcategoriesByCategory.length == bottomCategories.length &&\r\n                      <span\r\n                        key={++uniqueKey * 10}\r\n                        className={s.header__text_animation_md}\r\n                        onClick={() => {\r\n                          handleIsCategoryHovered(!isCategoryHovered, category)\r\n                        }}\r\n                      >\r\n                        {category.title}\r\n                      </span>\r\n                    }\r\n\r\n                    {subcategoriesByCategory !== null && subcategoriesByCategory.length !== undefined && subcategoriesByCategory.length > 0 && subcategoriesByCategory.length == bottomCategories.length && subcategoriesByCategory[category.id - 1].length > 0 &&\r\n                      <div>\r\n                        <div className={s.subcategory__ul_outside} />\r\n\r\n                        <ul className={s.subcategory__ul}>\r\n                          <div\r\n                            className={s.subcategory__content}\r\n                            onMouseEnter={ () => handleIsCategoryHovered(true) }\r\n                            onMouseLeave={ () => handleIsCategoryHovered(false) }\r\n                          >\r\n                            <div className={s.subcategory__trinagle}/>\r\n                              <div className={s.subcategory__container} >\r\n                                {subcategoriesByCategory[category.id - 1].length > 0 && subcategoriesByCategory[category.id - 1].map(subcat => {\r\n                                  return (\r\n                                    <li className={s.subcategory__li}>\r\n                                      <a key={++uniqueKey * 100} className={s.subcategory__li_link} href={`${currentSelectedCategory?.url}${subcat.url}`}>\r\n                                        {subcat.title}\r\n                                      </a>\r\n                                    </li>\r\n                                  )\r\n                                })}\r\n                              </div>\r\n                          </div> \r\n                        </ul>\r\n                      </div>\r\n                    }\r\n                  </li>\r\n                )}\r\n              </ul>\r\n\r\n\r\n              {/* for lg */}\r\n              <form onClick={ () => handleIsCartOpen(false) } className={s.search__form}>\r\n                <input \r\n                  className={s.search__input}\r\n                  type=\"text\"\r\n                  placeholder=\"Поиск\"\r\n                  value={searchValue}\r\n                  onChange={(event) => {handleSetSearchValue(event)}}\r\n                />\r\n\r\n                <a className={s.search__btn} href={`/search/?q=${searchValue}`}/>\r\n              </form>\r\n\r\n              {/* for md */}\r\n              <img \r\n                className={s.header__icon_md}\r\n                src={search}\r\n                alt=\"img\"\r\n                onClick={() => handleOnClickSearch()}\r\n              />\r\n\r\n              <div className={s.cart__wrapper}>\r\n                {isCartOpen && \r\n                  <div\r\n                    onClick={ () => {handleIsCartOpen(false)} }\r\n                    className={s.cart__outside} \r\n                  />\r\n                }\r\n                <ul className={s.cart__category_ul}>\r\n                  <li className={s.cart__category_li}>\r\n                    <div \r\n                      className={s.header__cart}\r\n                      onClick={ () => {handleIsCartOpen()} }\r\n                    >\r\n                      <img className={s.header__cart_svg} alt=\"КОРЗИНА\" src={cart}/>\r\n                      <div className={s.header__cart_circle}/>\r\n                      <span className={s.header__cart_count}>{countGoodsInCart}</span>\r\n                    </div>\r\n\r\n                    <CSSTransition\r\n                      in={isCartOpen} \r\n                      timeout={300} \r\n                      unmountOnExit \r\n                      classNames='menu'\r\n                    >\r\n                      <ul className={s.cart__subcategory_ul}>\r\n                        <div className={s.cart__subcategory_header}>\r\n                          <span className={s.header__span}>КОРЗИНА ({countGoodsInCart})</span>\r\n                            <span \r\n                              className={s.header__close}\r\n                              onClick={(event) => {\r\n                                handleIsCartOpen(false)\r\n                                event.currentTarget.classList.add(`${s.active}`)\r\n                              }}\r\n                            />\r\n                        </div>\r\n                        <div className={s.cart__subcategory_container}>\r\n                          {/* Корзина не пустая */}\r\n                          {cartProductList !== null && cartProductList.map((product, index) => {\r\n                            return (\r\n                              <div key={++uniqueKey} className={s.product}>\r\n                                <div className={s.product__container}>\r\n                                  <div className={s.product__img} />\r\n                                  <div className={s.product__content}>\r\n                                    <div className={s.product__content_top}>\r\n                                      <span className={s.product__title}>{product.header}</span>\r\n                                      <span onClick={ () => deleteFromCart(product.id, index) } className={s.product__delete}/>\r\n                                    </div>\r\n\r\n                                    <div className={s.product__content_bottom}>\r\n                                      <span className={s.product__count}>100 гр.</span>\r\n                                      <span className={s.product__price}>{product.price} р.</span>\r\n                                    </div>\r\n                                    <span style={{ 'display': 'none' }}>{totalCostCart += product.price}</span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            )\r\n                          })}\r\n\r\n                          {/* Корзина пустая */}\r\n                          {cartProductList === null &&\r\n                            <div className={s.cart__empty}>\r\n                              КОРЗИНА ПУСТАЯ :(\r\n                            </div>\r\n                          }\r\n                        </div>\r\n\r\n                        {cartProductList !== null &&  \r\n                          <div className={s.cart__footer}>\r\n                            <div className={s.cart__footer_total}>\r\n                              <span className={s.cart__total_title}>ИТОГО</span>\r\n                              <span className={s.cart__total_value}>{totalCostCart} р.</span>\r\n                            </div>\r\n\r\n                            <div \r\n                              className={s.cart__footer_btn}\r\n                              onClick={ (event) => {event.currentTarget.classList.add(`${s.active}`);} }\r\n                            >\r\n                              ОФОРМИТЬ ЗАКАЗ\r\n                            </div>\r\n                          </div>  \r\n                        }\r\n                      </ul>\r\n                    </CSSTransition>  \r\n                  </li>\r\n                </ul>\r\n\r\n                <div \r\n                  className={isHamburgerOpen ? `${s.burger__container} ${s.burger__active}` : s.burger__container} \r\n                  onClick={toggleHamburger}\r\n                >\r\n                  <span/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* md */}\r\n          <div className={s.header__bottom_md}>\r\n            <div className={s.header__bottom_container_md}>\r\n              <img className={s.header__icon_md} src={search} alt=\"ПОИСК\" onClick={() => handleOnClickSearch()}/>\r\n              <a className={s.header__bottom_logo} href=\"/\"/>\r\n\r\n              <div style={{ \r\n                'display': 'flex',\r\n              }}>\r\n                <ul className={s.cart__category_ul}>\r\n                  <li className={s.cart__category_li}>\r\n                    <div \r\n                      className={s.header__cart}\r\n                      onClick={ () => {handleIsCartOpen()} }\r\n                    >\r\n                      <img className={s.header__cart_svg} alt=\"КОРЗИНА\" src={cart}/>\r\n                      <div className={s.header__cart_circle}/>\r\n                      <span className={s.header__cart_count}>{countGoodsInCart}</span>\r\n                    </div>\r\n\r\n                    <CSSTransition\r\n                      in={isCartOpen} \r\n                      timeout={300} \r\n                      unmountOnExit \r\n                      classNames='menu'\r\n                    >\r\n                      <ul className={s.cart__subcategory_ul}>\r\n                        <div className={s.cart__subcategory_header}>\r\n                          <span className={s.header__span}>КОРЗИНА ({countGoodsInCart})</span>\r\n                            <span \r\n                              className={s.header__close}\r\n                              onClick={(event) => {\r\n                                handleIsCartOpen(false)\r\n                                event.currentTarget.classList.add(`${s.active}`)\r\n                              }}\r\n                            >\r\n                              12\r\n                            </span>\r\n                        </div>\r\n                        <div className={s.cart__subcategory_container}>\r\n                          {/* Корзина не пустая */}\r\n                          {cartProductList !== null && cartProductList.map((product, index) => {\r\n                            return (\r\n                              <div key={++uniqueKey} className={s.product}>\r\n                                <div className={s.product__container}>\r\n                                  <div className={s.product__img} />\r\n                                  <div className={s.product__content}>\r\n                                    <div className={s.product__content_top}>\r\n                                      <span className={s.product__title}>{product.header}</span>\r\n                                      <span onClick={ () => deleteFromCart(product.id, index) } className={s.product__delete}/>\r\n                                    </div>\r\n\r\n                                    <div className={s.product__content_bottom}>\r\n                                      <span className={s.product__count}>100 гр.</span>\r\n                                      <span className={s.product__price}>{product.price} р.</span>\r\n                                    </div>\r\n                                    <span style={{ 'display': 'none' }}>{totalCostCart += product.price}</span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            )\r\n                          })}\r\n\r\n                          {/* Корзина пустая */}\r\n                          {cartProductList === null &&\r\n                            <div className={s.cart__empty}>\r\n                              КОРЗИНА ПУСТАЯ :(\r\n                            </div>\r\n                          }\r\n                        </div>\r\n\r\n                        {cartProductList !== null &&  \r\n                          <div className={s.cart__footer}>\r\n                            <div className={s.cart__footer_total}>\r\n                              <span className={s.cart__total_title}>ИТОГО</span>\r\n                              <span className={s.cart__total_value}>{totalCostCart} р.</span>\r\n                            </div>\r\n\r\n                            <div \r\n                              className={s.cart__footer_btn}\r\n                              onClick={ (event) => {event.currentTarget.classList.add(`${s.active}`);} }\r\n                            >\r\n                              ОФОРМИТЬ ЗАКАЗ\r\n                            </div>\r\n                          </div>  \r\n                        }\r\n\r\n                      </ul>\r\n                    </CSSTransition>  \r\n                  </li>\r\n                </ul>\r\n\r\n                <div \r\n                  className={isHamburgerOpen ? `${s.burger__container} ${s.burger__active}` : s.burger__container} \r\n                  onClick={() => toggleHamburger()}\r\n                >\r\n                  <span/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {subcategoriesByCategory !== null && subcategoriesByCategory.length > 0 &&\r\n              <CSSTransition \r\n                in={isHamburgerOpen} \r\n                timeout={300} \r\n                unmountOnExit \r\n                classNames='menu'\r\n              >   \r\n                <div className={s.burger__menu}>\r\n                  <div className={s.burger__menu_container}>\r\n                    {bottomCategories.map(category => {\r\n                        return <Spoiler\r\n                                  key={++uniqueKey}\r\n                                  title={category.title}\r\n                                  content={subcategoriesByCategory !== null ? subcategoriesByCategory[category.id - 1] : null}\r\n                                  categoryUrl={category.url}\r\n                                />\r\n                      })\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </CSSTransition>\r\n            }  \r\n          </div>\r\n                \r\n          <CSSTransition \r\n            in={isSearchOpen} \r\n            timeout={300} \r\n            unmountOnExit \r\n            classNames='search'\r\n          >\r\n            <div className='header__search_md'>\r\n              <input value={searchValue} onChange={(event) => {handleSetSearchValue(event)}} className='header__search_input' type=\"text\" placeholder=\"Поиск\"/>\r\n              <a className='header__search_btn' href={`/search/?q=${searchValue}`}/>\r\n            </div>\r\n          </CSSTransition>\r\n        \r\n        </nav>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar","C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\components\\Navbar\\Spoiler\\Spoiler.tsx",["89","90","91","92"],[],"import React, { useState } from \"react\"\r\nimport s from './Spoiler.module.css'\r\n\r\nimport './index.css'\r\n\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport { SpoilerContentType } from './../../../interfaces/interfaces'\r\n\r\nconst Spoiler: React.FC<SpoilerContentType> = (props: SpoilerContentType) => {\r\n\r\n  const [isSpoilerOpen, setIsSpoilerOpen] = useState<boolean | undefined>(false)\r\n  const handleSetIsSpoilerOpen = (): void => setIsSpoilerOpen(!isSpoilerOpen)\r\n\r\n  const isArrowStyle: string = (props.content == null) || (props.content !== null && props.content.length == 0) || undefined ? '' : `${s.arrow}`\r\n  const isOpenedSpoiler: string = ((isSpoilerOpen) && (props.content !== (null || undefined))) ? `${s.openned}` : ''\r\n  const titleStyle = `${s.spoiler__title} ${isArrowStyle} ${isOpenedSpoiler}`\r\n\r\n  return (\r\n    <div className={s.spoiler} onClick={handleSetIsSpoilerOpen}>\r\n      {/* with subcategory */}\r\n      {props.content !== undefined && props.content !== null && props.content.length > 0 &&\r\n        <span className={titleStyle}>{props.title}</span>\r\n      }\r\n\r\n      {/* without subcategory */}\r\n      {(props.content === undefined || props.content === null) || (props.content !== null && props.content.length == 0) &&\r\n        <a \r\n          className={`${titleStyle} ${s.spoiler__title_link}`}\r\n          href={props.categoryUrl}\r\n        >\r\n            {props.title}\r\n        </a>\r\n      }\r\n\r\n      {(props.content !== undefined && props.content !== null) &&\r\n        <CSSTransition \r\n          in={isSpoilerOpen} \r\n          timeout={300} \r\n          unmountOnExit \r\n          classNames='spoiler'\r\n        >   \r\n          <ul className={s.spoiler__content}>\r\n            {props.content?.map(subcategory => {\r\n              return ( \r\n                <li className={s.spoiler__li}>\r\n                  <a className={s.spoiler__link} href={`${props.categoryUrl}${subcategory.url}`}>\r\n                    {subcategory.title}\r\n                  </a>\r\n                </li>\r\n                )\r\n              }\r\n            )}\r\n          </ul>\r\n        </CSSTransition> \r\n      }\r\n         \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spoiler;","C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\components\\Navbar\\NavbarContainer.tsx",[],[],"C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\store\\Actions\\NavbarAction.ts",["93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],[],"C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\store\\redux-store.ts",[],[],"C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\store\\Reducers\\NavbarReducer.ts",[],[],"C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\hooks\\useApi.ts",["118"],[],"import axios, { AxiosRequestConfig, AxiosResponse } from \"axios\";\r\nimport React from \"react\"\r\n\r\nconst BASE_URL = 'http://localhost:8080'\r\n\r\nconst useApi = async (method: string, url: string, config?: AxiosRequestConfig<{}> | undefined, data?: any): Promise<AxiosResponse<any, any>> => {\r\n\r\n  const requestUrl = `${BASE_URL}${url}`\r\n  let response: AxiosResponse<any, any>\r\n\r\n  switch(method) {\r\n    case 'POST':\r\n      response = await axios.post(requestUrl, data, config).then(\r\n        response => {return response}\r\n      )\r\n      return response\r\n\r\n    case 'PUT':\r\n      response = await axios.put(requestUrl, data, config).then(\r\n        response => {return response}\r\n      )\r\n      return response\r\n      \r\n    case 'GET':\r\n      response = await axios.get(requestUrl, config).then(\r\n        response => {return response}\r\n      )\r\n      return response\r\n      \r\n    case 'DELETE':\r\n      response = await axios.delete(requestUrl, config).then(\r\n        response => {return response}\r\n      )\r\n      return response\r\n    \r\n    default:\r\n      return {config: {}, data: null, headers: {}, status: -1, statusText: '', request: ''};\r\n  }\r\n}\r\n\r\nexport default useApi;","C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\components\\Router\\RouterContainer.ts",[],[],"C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\components\\Router\\Router.tsx",["119"],[],"C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\components\\Sliders\\Slider.tsx",[],[],"C:\\Users\\FORTRIX\\Desktop\\coffee_shop\\coffee-shop-react\\src\\store\\Reducers\\UrlReducer.ts",[],[],{"ruleId":"120","severity":1,"message":"121","line":25,"column":6,"nodeType":"122","endLine":25,"endColumn":31,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":28,"column":82,"nodeType":"126","messageId":"127","endLine":28,"endColumn":84},{"ruleId":"120","severity":1,"message":"128","line":30,"column":6,"nodeType":"122","endLine":30,"endColumn":31,"suggestions":"129"},{"ruleId":"124","severity":1,"message":"125","line":65,"column":15,"nodeType":"126","messageId":"127","endLine":65,"endColumn":17},{"ruleId":"124","severity":1,"message":"125","line":91,"column":15,"nodeType":"126","messageId":"127","endLine":91,"endColumn":17},{"ruleId":"130","severity":1,"message":"131","line":124,"column":15,"nodeType":"132","endLine":124,"endColumn":62},{"ruleId":"124","severity":1,"message":"125","line":144,"column":192,"nodeType":"126","messageId":"127","endLine":144,"endColumn":194},{"ruleId":"124","severity":1,"message":"125","line":144,"column":231,"nodeType":"126","messageId":"127","endLine":144,"endColumn":233},{"ruleId":"124","severity":1,"message":"125","line":153,"column":230,"nodeType":"126","messageId":"127","endLine":153,"endColumn":232},{"ruleId":"124","severity":1,"message":"125","line":165,"column":175,"nodeType":"126","messageId":"127","endLine":165,"endColumn":177},{"ruleId":"130","severity":1,"message":"131","line":206,"column":17,"nodeType":"132","endLine":206,"endColumn":82},{"ruleId":"130","severity":1,"message":"131","line":318,"column":15,"nodeType":"132","endLine":318,"endColumn":62},{"ruleId":"130","severity":1,"message":"131","line":447,"column":15,"nodeType":"132","endLine":447,"endColumn":85},{"ruleId":"124","severity":1,"message":"125","line":14,"column":107,"nodeType":"126","messageId":"127","endLine":14,"endColumn":109},{"ruleId":"133","severity":1,"message":"134","line":26,"column":64,"nodeType":"135","messageId":"136","endLine":26,"endColumn":66},{"ruleId":"124","severity":1,"message":"125","line":26,"column":115,"nodeType":"126","messageId":"127","endLine":26,"endColumn":117},{"ruleId":"133","severity":1,"message":"134","line":26,"column":121,"nodeType":"135","messageId":"136","endLine":26,"endColumn":123},{"ruleId":"137","severity":1,"message":"138","line":4,"column":98,"nodeType":"139","messageId":"140","endLine":4,"endColumn":124},{"ruleId":"124","severity":1,"message":"125","line":15,"column":25,"nodeType":"126","messageId":"127","endLine":15,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":18,"column":57,"nodeType":"143","messageId":"144","endLine":18,"endColumn":59},{"ruleId":"124","severity":1,"message":"125","line":19,"column":28,"nodeType":"126","messageId":"127","endLine":19,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":21,"column":28,"nodeType":"126","messageId":"127","endLine":21,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":23,"column":28,"nodeType":"126","messageId":"127","endLine":23,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":34,"column":25,"nodeType":"126","messageId":"127","endLine":34,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":37,"column":50,"nodeType":"143","messageId":"144","endLine":37,"endColumn":52},{"ruleId":"124","severity":1,"message":"125","line":38,"column":28,"nodeType":"126","messageId":"127","endLine":38,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":40,"column":28,"nodeType":"126","messageId":"127","endLine":40,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":42,"column":28,"nodeType":"126","messageId":"127","endLine":42,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":44,"column":28,"nodeType":"126","messageId":"127","endLine":44,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":55,"column":25,"nodeType":"126","messageId":"127","endLine":55,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":58,"column":53,"nodeType":"143","messageId":"144","endLine":58,"endColumn":55},{"ruleId":"124","severity":1,"message":"125","line":59,"column":28,"nodeType":"126","messageId":"127","endLine":59,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":61,"column":28,"nodeType":"126","messageId":"127","endLine":61,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":63,"column":28,"nodeType":"126","messageId":"127","endLine":63,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":65,"column":28,"nodeType":"126","messageId":"127","endLine":65,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":67,"column":28,"nodeType":"126","messageId":"127","endLine":67,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":69,"column":28,"nodeType":"126","messageId":"127","endLine":69,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":71,"column":28,"nodeType":"126","messageId":"127","endLine":71,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":73,"column":28,"nodeType":"126","messageId":"127","endLine":73,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":75,"column":28,"nodeType":"126","messageId":"127","endLine":75,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":86,"column":47,"nodeType":"126","messageId":"127","endLine":86,"endColumn":49},{"ruleId":"124","severity":1,"message":"125","line":88,"column":25,"nodeType":"126","messageId":"127","endLine":88,"endColumn":27},{"ruleId":"137","severity":1,"message":"145","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":13},{"ruleId":"137","severity":1,"message":"146","line":2,"column":24,"nodeType":"139","messageId":"140","endLine":2,"endColumn":35},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["147"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'handleGetSubcategoriesByCategory' and 'subcategoriesByCategoryResult.length'. Either include them or remove the dependency array.",["148"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","@typescript-eslint/no-unused-vars","'setSubcategoriesByCategory' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'React' is defined but never used.","'useLocation' is defined but never used.",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [props, props.productCategories]",{"range":"153","text":"154"},"Update the dependencies array to be: [handleGetSubcategoriesByCategory, props.productCategories, subcategoriesByCategoryResult.length]",{"range":"155","text":"156"},[754,779],"[props, props.productCategories]",[942,967],"[handleGetSubcategoriesByCategory, props.productCategories, subcategoriesByCategoryResult.length]"]